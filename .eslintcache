[{"C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\App.js":"1","C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\index.js":"2","C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\components\\Login.js":"3","C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\components\\Register.js":"4"},{"size":1727,"mtime":1609767798370,"results":"5","hashOfConfig":"6"},{"size":167,"mtime":1609036523291,"results":"7","hashOfConfig":"6"},{"size":3003,"mtime":1609755006503,"results":"8","hashOfConfig":"6"},{"size":5439,"mtime":1609761718770,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ofr5ru",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\App.js",[],"C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\index.js",[],["20","21"],"C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\components\\Login.js",[],"C:\\Users\\Makomori\\Desktop\\Example\\example\\src\\components\\Register.js",["22"],"import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nconst useStyles = makeStyles({\r\n  inp: {\r\n    height: 50,\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    width: \"100%\",\r\n  },\r\n\r\n  but: {\r\n    marginTop: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n});\r\n\r\nfunction Register({ handleClick, dark }) {\r\n  const [inputFields, setInputFields] = useState([{ fav: \"\" }]);\r\n\r\n  const classes = useStyles();\r\n\r\n \r\n\r\n  const [state, setState] = useState({\r\n    checked: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  let signUpSchema = yup.object().shape({\r\n    email: yup.string().email().required(\"This field require!!\"),\r\n    password: yup.string().required(\"This field require!!\"),\r\n  });\r\n\r\n  const { register, handleSubmit, errors } = useForm({\r\n    resolver: yupResolver(signUpSchema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(data, null, 4));\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleChangeInput = (index, event) => {\r\n    const values = [...inputFields];\r\n    values[index][event.target.name] = event.target.value;\r\n    setInputFields(values);\r\n  };\r\n\r\n  const handleAddFields = () => {\r\n    setInputFields([...inputFields, { fav: \"\" }]);\r\n  };\r\n\r\n  const handleRemoveFields = (index) => {\r\n    const values = [...inputFields];\r\n    values.splice(index, 1);\r\n    setInputFields(values);\r\n  };\r\n\r\n  return (\r\n    <Ris dark={dark} >\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <Title>\r\n          <h1>Signup</h1>\r\n        </Title>\r\n\r\n        <TextField\r\n          className={classes.inp}\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          inputRef={register}\r\n          name=\"email\"\r\n        />\r\n        {errors.email?.message && (\r\n          <Alert severity=\"error\">Email Validation Field is Required</Alert>\r\n        )}\r\n\r\n        <TextField\r\n          className={classes.inp}\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          inputRef={register}\r\n          name=\"password\"\r\n        />\r\n\r\n        {errors.password?.message && (\r\n          <Alert severity=\"error\">Password Validation Field is Required</Alert>\r\n        )}\r\n\r\n        {inputFields.map((inputField, index) => (\r\n          <div key={index}>\r\n            <TextField\r\n              className={classes.inp}\r\n              label=\"Your favorite Artist\"\r\n              variant=\"outlined\"\r\n              type=\"text\"\r\n              name=\"fav\"\r\n              value={inputField.fav}\r\n              onChange={(event) => handleChangeInput(index, event)}\r\n            />\r\n            <IconButton\r\n              disabled={inputFields.length === 1}\r\n              onClick={() => handleRemoveFields(inputField.index)}\r\n            >\r\n              <RemoveIcon />\r\n            </IconButton>\r\n            <IconButton onClick={handleAddFields}>\r\n              <AddIcon style={{ color: \"green\" }} />\r\n            </IconButton>\r\n          </div>\r\n        ))}\r\n\r\n        <Condition  >\r\n          <Title   >\r\n            <h3>Terms and Conditions</h3>\r\n           \r\n          </Title>\r\n          <p>1.Definitions The following words and terms </p>\r\n          <p>2.Agreement to these Terms and Conditions</p>\r\n        </Condition>\r\n\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked={state.checked}\r\n              onChange={handleChange}\r\n              name=\"checked\"\r\n              color=\"primary\"\r\n            />\r\n          }\r\n          label=\"Accept\"\r\n        />\r\n\r\n        <Button\r\n          disabled={state.checked === false}\r\n          type=\"submit\"\r\n          className={classes.but}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n        >\r\n          Signup\r\n        </Button>\r\n        <Link onClick={handleClick}>Sign In?</Link>\r\n      </form>\r\n    </Ris>\r\n  );\r\n}\r\n\r\nconst Ris = styled.div`\r\n  height: 680px;\r\n  width: 400px;\r\n  background-color: ${({dark}) => (dark ? `#54554F` :` #ebf3e6`)};\r\n  color: ${({dark}) => (dark ? ` #ebf3e6`:`#54554F`)};\r\n  border-radius: 2px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 15px 15px;\r\n  box-sizing: border-box;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Condition = styled.div`\r\n  margin-top: 20px;\r\n  height: 90px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n \r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  margin-top: 20px;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default Register;\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":27,"nodeType":"29","messageId":"30","endLine":1,"endColumn":36},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]